///////////////////////////////////////////////////////////////////////////////
/// 
///	@file    Serial_H.h    
/// 
/// @brief   串口通信类头文件，本串口通讯类提供windows操作环境下与串口进行通讯
/// 的功能，使用Windows系统提供的串行API函数。
/// 使用步骤如下：1、使用构造函数创建SerialPort类对象
///				  2、读、写操作直接调用对应成员函数ReadPort()和WritePort()

/// @note 在Windows系统下，串口和其他通讯设备都会被当做文件来处理
/// 
/// @version 1.0
/// @date 2019年3月15日
/// @note 参考：https://blog.csdn.net/wenshiabc/article/details/53026183
///             http://www.cnblogs.com/zahxz/archive/2012/12/24/2830535.html
/// 
////////////////////////////////////////////////////////////////////////////////

#pragma once
#include<Windows.h>
#include<string>
#include<iostream>
class SerialPort
{
public:
	/***************************************************************************
	*  功能： 构造函数
	*  port:  COM3
	*  
	*  @brief 调用成员函数InitPort(),创建对应COM口的句柄，同时对该句柄
	*  进行参数设置
	*  @note
	*	
	****************************************************************************/
	SerialPort();


	/***************************************************************************
	*  功能： 析构函数
	*
	*  @brief 调用成员函数ClosePort(),关闭COM口句柄，销毁创建对象所使用空间
	*  @note
	*
	****************************************************************************/
	~SerialPort();


	/***************************************************************************
	*  功能： 读取串口
	*
	*  @brief 对在构造函数中设定好的COM对应的串口进行数据读取
	*  @param addr: 指定存放从串口读取数据地址
	*  @param size：指定读取大小，单位：每4字节（4 bytes）
	*  @param timeout：超时时间，单位毫秒（ms）
	*  @return 正常读取时，返回从串口实际读取到的DWORD数，失败则返回-1
	*  @note
	*
	****************************************************************************/
	int ReadPort(void* addr,DWORD size,UINT timeout);//DWORD = unsigned long WORD = 4 bytes



	/***************************************************************************
	*  功能： 写串口
	*
	*  @brief 对在构造函数中设定好的COM对应的串口进行数据写入
	*  @param addr: 指定存放将要发送给串口的数据地址
	*  @param size：指定读取大小，单位：每4字节（4 bytes）
	*  @param timeout：超时时间，单位毫秒（ms）
	*  @return 正常写入时，返回true，失败则返回flase
	*  @note
	*
	****************************************************************************/
	bool WritePort(void* addr,DWORD size,UINT TIMEOUT);
	

private:
	//与COM对应的句柄
	HANDLE m_ucom;


	/***************************************************************************
	*  功能： 打开串口
	*
	*  @brief 创建串口对应的句柄
	*  @return 创建成功返回true，失败则返回flase
	*  @note
	*
	****************************************************************************/
	bool OpenPort();


	/***************************************************************************
	*  功能： 初始化串口
	*
	*  @brief 内部调用成员函数OpenPort()，一共进行五步操作：
	*	 （1）创建与串口对应的文件句柄；
	*	 （2）获取串口当前参数；
    *    （3）重新设置串口参数；
    *    （4）设置串口接受和发送缓冲区大小（可选）；
    *    （5）清空发送接收缓冲区创建串口对应的句柄
	*  @return 返回false的情况（条件之间为“或”的关系）：
	*	   1、创建句柄失败；
	*	   2、设置串口连接信息失败；
	*	   3、设置收发缓冲器大小失败；
	*	   4：清空收发缓冲器失败
	*  初始化成功返回true
	*  @note
	*
	****************************************************************************/
	bool InitPort();


	/***************************************************************************
	*  功能： 关闭串口
	*
	*  @brief 关闭与串口对应的句柄
	*  @return 关闭成功返回true，失败则返回flase
	*  @note
	*
	****************************************************************************/
	bool ClosePort();
};
